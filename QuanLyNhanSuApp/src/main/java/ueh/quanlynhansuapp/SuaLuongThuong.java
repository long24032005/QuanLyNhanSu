package ueh.quanlynhansuapp;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import javafx.beans.value.ChangeListener;
import javafx.fxml.FXML;
import javafx.scene.control.*;
import javafx.stage.Stage;

/**
 * Controller cho m√†n h√¨nh "S·ª≠a l∆∞∆°ng th∆∞·ªüng"
 * Chu·∫©n h√≥a: Bao ph·ªß ngo·∫°i l·ªá, ki·ªÉm tra h·ª£p l·ªá, auto t√≠nh t·ªïng l∆∞∆°ng.
 */
public class SuaLuongThuong {

    // ===== ƒê·ªãnh d·∫°ng ng√†y d√πng chung =====
    private static final DateTimeFormatter MONTH_YEAR = DateTimeFormatter.ofPattern("MM/yyyy");
    private static final DateTimeFormatter YMD = DateTimeFormatter.ofPattern("yyyy-MM-dd");
    private static final DateTimeFormatter DMY = DateTimeFormatter.ofPattern("dd/MM/yyyy");

    // ===== Bi·∫øn =====
    private LuongThuong luongThuong;

    // ====== FXML Components ======
    @FXML private TextField sualuongthuong_txmaluong;
    @FXML private TextField sualuongthuong_txmaNV;
    @FXML private DatePicker sualuongthuong_datethangnam;
    @FXML private TextField sualuongthuong_txluongcoban;
    @FXML private TextField sualuongthuong_txphucap;
    @FXML private TextField sualuongthuong_txthuong;
    @FXML private TextField sualuongthuong_txkhautru;
    @FXML private TextField sualuongthuong_txtongluong;
    @FXML private DatePicker sualuongthuong_datengaychitra;
    @FXML private Button sualuongthuong_btsua;
    @FXML private Button sualuongthuong_btquaylai;

    // ==================== KH·ªûI T·∫†O ====================

    @FXML
    public void initialize() {
        try {
            // Kh√¥ng cho s·ª≠a m√£ l∆∞∆°ng (kh√≥a ch√≠nh)
            sualuongthuong_txmaluong.setEditable(false);
            sualuongthuong_txtongluong.setEditable(false);
            sualuongthuong_txtongluong.setStyle("-fx-alignment: CENTER-LEFT;");

            // Auto t√≠nh t·ªïng l∆∞∆°ng khi nh·∫≠p
            ChangeListener<String> recalc = (o, a, b) -> capNhatTongLuong();
            sualuongthuong_txluongcoban.textProperty().addListener(recalc);
            sualuongthuong_txphucap.textProperty().addListener(recalc);
            sualuongthuong_txthuong.textProperty().addListener(recalc);
            sualuongthuong_txkhautru.textProperty().addListener(recalc);

            // R√†ng bu·ªôc: ch·ªâ cho ph√©p nh·∫≠p s·ªë nguy√™n d∆∞∆°ng
            addIntegerOnlyValidation(sualuongthuong_txluongcoban, "L∆∞∆°ng c∆° b·∫£n");
            addIntegerOnlyValidation(sualuongthuong_txphucap, "Ph·ª• c·∫•p");
            addIntegerOnlyValidation(sualuongthuong_txthuong, "Th∆∞·ªüng");
            addIntegerOnlyValidation(sualuongthuong_txkhautru, "Kh·∫•u tr·ª´");
        } catch (Exception e) {
            canhbao.canhbao("L·ªói kh·ªüi t·∫°o", "Kh√¥ng th·ªÉ kh·ªüi t·∫°o form s·ª≠a: " + e.getMessage());
        }
    }

    // ==================== NH·∫¨N D·ªÆ LI·ªÜU T·ª™ FORM CH√çNH ====================

    public void setLuongThuong(LuongThuong lt) {
        try {
            this.luongThuong = lt;
            if (lt == null) return;

            sualuongthuong_txmaluong.setText(lt.getMaLuong());
            sualuongthuong_txmaNV.setText(lt.getMaNhanVien());
            sualuongthuong_txluongcoban.setText(doubleToPlain(lt.getLuongCoBan()));
            sualuongthuong_txphucap.setText(doubleToPlain(lt.getPhuCap()));
            sualuongthuong_txthuong.setText(doubleToPlain(lt.getThuong()));
            sualuongthuong_txkhautru.setText(doubleToPlain(lt.getKhauTru()));
            sualuongthuong_txtongluong.setText(doubleToPlain(lt.getTongLuong()));

            try {
                sualuongthuong_datethangnam.setValue(LocalDate.parse("01/" + lt.getThangNam(), DMY));
            } catch (DateTimeParseException ex) {
                sualuongthuong_datethangnam.setValue(null);
            }

            try {
                String ngay = lt.getNgayChiTra();
                LocalDate d = ngay.contains("/") ? LocalDate.parse(ngay, DMY) : LocalDate.parse(ngay, YMD);
                sualuongthuong_datengaychitra.setValue(d);
            } catch (DateTimeParseException ex) {
                sualuongthuong_datengaychitra.setValue(null);
            }

        } catch (Exception e) {
            canhbao.canhbao("L·ªói d·ªØ li·ªáu", "Kh√¥ng th·ªÉ hi·ªÉn th·ªã th√¥ng tin l∆∞∆°ng: " + e.getMessage());
        }
    }

    // ==================== N√öT S·ª¨A ====================

    @FXML
    private void sualuongthuong_suaAction() {
        try {
            if (luongThuong == null) {
                canhbao.canhbao("L·ªói h·ªá th·ªëng", "Kh√¥ng t√¨m th·∫•y b·∫£n ghi c·∫ßn s·ª≠a!");
                return;
            }

            String maLuong = safeTrim(sualuongthuong_txmaluong.getText());
            String maNV = safeTrim(sualuongthuong_txmaNV.getText());
            LocalDate thangNamDate = sualuongthuong_datethangnam.getValue();
            LocalDate ngayChiTraDate = sualuongthuong_datengaychitra.getValue();

            // ===== Ki·ªÉm tra thi·∫øu d·ªØ li·ªáu =====
            if (maNV.isEmpty() || thangNamDate == null || ngayChiTraDate == null) {
                canhbao.canhbao("Thi·∫øu th√¥ng tin", "Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin tr∆∞·ªõc khi l∆∞u!");
                return;
            }

            // ===== Parse ti·ªÅn =====
            double luongCoBan = parseMoneySafe(sualuongthuong_txluongcoban.getText(), "L∆∞∆°ng c∆° b·∫£n");
            double phuCap = parseMoneySafe(sualuongthuong_txphucap.getText(), "Ph·ª• c·∫•p");
            double thuong = parseMoneySafe(sualuongthuong_txthuong.getText(), "Th∆∞·ªüng");
            double khauTru = parseMoneySafe(sualuongthuong_txkhautru.getText(), "Kh·∫•u tr·ª´");

            if (luongCoBan < 0 || phuCap < 0 || thuong < 0 || khauTru < 0) {
                canhbao.canhbao("Gi√° tr·ªã kh√¥ng h·ª£p l·ªá", "Kh√¥ng ƒë∆∞·ª£c nh·∫≠p s·ªë √¢m cho c√°c tr∆∞·ªùng l∆∞∆°ng!");
                return;
            }
            if (khauTru > (luongCoBan + phuCap + thuong)) {
                canhbao.canhbao("Kh·∫•u tr·ª´ qu√° cao", "Kho·∫£n kh·∫•u tr·ª´ kh√¥ng th·ªÉ v∆∞·ª£t t·ªïng thu nh·∫≠p!");
                return;
            }

            // ===== Ki·ªÉm tra ng√†y =====
            if (ngayChiTraDate.isBefore(thangNamDate.withDayOfMonth(1))) {
                canhbao.canhbao("L·ªói th·ªùi gian", "Ng√†y chi tr·∫£ kh√¥ng th·ªÉ tr∆∞·ªõc th√°ng l∆∞∆°ng!");
                return;
            }

            // ===== Ki·ªÉm tra nh√¢n vi√™n c√≥ t·ªìn t·∫°i =====
            boolean tonTaiNV = DataService.getInstance().getDsNhanSu()
                    .stream().anyMatch(ns -> ns.getMaNV().equalsIgnoreCase(maNV));
            if (!tonTaiNV) {
                canhbao.canhbao("Sai m√£ nh√¢n vi√™n", "Kh√¥ng t√¨m th·∫•y m√£ nh√¢n vi√™n '" + maNV + "' trong h·ªá th·ªëng!");
                return;
            }

            // ===== X√°c nh·∫≠n =====
            if (!canhbao.xacNhan("X√°c nh·∫≠n s·ª≠a", "L∆∞u thay ƒë·ªïi?", 
                    "M√£ l∆∞∆°ng: " + maLuong + "\nNh√¢n vi√™n: " + maNV)) {
                return;
            }

            // ===== C·∫≠p nh·∫≠t v√†o ƒë·ªëi t∆∞·ª£ng =====
            luongThuong.setMaNhanVien(maNV);
            luongThuong.setThangNam(thangNamDate.format(MONTH_YEAR));
            luongThuong.setLuongCoBan(luongCoBan);
            luongThuong.setPhuCap(phuCap);
            luongThuong.setThuong(thuong);
            luongThuong.setKhauTru(khauTru);
            luongThuong.setNgayChiTra(ngayChiTraDate.format(YMD));

            // ===== L∆∞u xu·ªëng DB =====
            try {
                DataService.getInstance().updateLuongThuong(luongThuong);
                canhbao.thongbao("Th√†nh c√¥ng üéâ", "ƒê√£ c·∫≠p nh·∫≠t th√¥ng tin l∆∞∆°ng th∆∞·ªüng!");
                ((Stage) sualuongthuong_btsua.getScene().getWindow()).close();
            } catch (Exception ex) {
                canhbao.canhbao("L·ªói c∆° s·ªü d·ªØ li·ªáu", "Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t d·ªØ li·ªáu: " + ex.getMessage());
            }

        } catch (Exception e) {
            e.printStackTrace();
            canhbao.canhbao("L·ªói h·ªá th·ªëng", "ƒê√£ x·∫£y ra l·ªói khi s·ª≠a: " + e.getMessage());
        }
    }

    // ==================== N√öT QUAY L·∫†I ====================

    @FXML
    private void sualuongthuong_quaylaiAction() {
        try {
            ((Stage) sualuongthuong_btquaylai.getScene().getWindow()).close();
        } catch (Exception e) {
            canhbao.canhbao("L·ªói tho√°t", "Kh√¥ng th·ªÉ ƒë√≥ng c·ª≠a s·ªï: " + e.getMessage());
        }
    }

    // ==================== H√ÄM H·ªñ TR·ª¢ ====================

    private void capNhatTongLuong() {
        try {
            double luongCoBan = parseMoneySafe(sualuongthuong_txluongcoban.getText(), "");
            double phuCap = parseMoneySafe(sualuongthuong_txphucap.getText(), "");
            double thuong = parseMoneySafe(sualuongthuong_txthuong.getText(), "");
            double khauTru = parseMoneySafe(sualuongthuong_txkhautru.getText(), "");
            double tong = luongCoBan + phuCap + thuong - khauTru;
            if (tong < 0) tong = 0;
            sualuongthuong_txtongluong.setText(doubleToPlain(tong));
        } catch (Exception ignored) {
            sualuongthuong_txtongluong.clear();
        }
    }

    private String doubleToPlain(double v) {
        if (Math.abs(v - Math.rint(v)) < 1e-9) return String.valueOf((long)Math.rint(v));
        return String.format("%.2f", v);
    }

    private String safeTrim(String s) {
        return s == null ? "" : s.trim();
    }

    private double parseMoneySafe(String s, String fieldName) {
        try {
            if (s == null || s.isBlank()) return 0;
            return Double.parseDouble(s.trim());
        } catch (NumberFormatException e) {
            if (!fieldName.isEmpty()) {
                canhbao.canhbao("Gi√° tr·ªã kh√¥ng h·ª£p l·ªá", "√î \"" + fieldName + "\" ph·∫£i l√† s·ªë h·ª£p l·ªá!");
            }
            return -1;
        }
    }

    private void addIntegerOnlyValidation(TextField field, String fieldName) {
        field.textProperty().addListener((obs, oldValue, newValue) -> {
            if (newValue == null || newValue.isEmpty()) return;
            if (!newValue.matches("\\d+")) {
                canhbao.canhbao("Gi√° tr·ªã kh√¥ng h·ª£p l·ªá",
                        "√î \"" + fieldName + "\" ch·ªâ ƒë∆∞·ª£c ph√©p nh·∫≠p s·ªë nguy√™n d∆∞∆°ng!");
                field.setText(oldValue);
            }
        });
    }
}

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package ueh.quanlynhansuapp;

/**
 *
 * @author philo
 */


import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javafx.beans.value.ChangeListener;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.stage.Stage;
import javafx.util.Callback;
import javafx.scene.control.cell.TextFieldTableCell;
import java.text.DecimalFormat;

/**
 * Controller qu·∫£n l√Ω ch·ª©c nƒÉng l∆∞∆°ng th∆∞·ªüng.
 * H·ªó tr·ª£ th√™m, s·ª≠a, x√≥a, t√¨m ki·∫øm, xu·∫•t th√¥ng tin.
 */
public class LuongThuongController {

    // ====== ƒê·ªãnh d·∫°ng ng√†y d√πng chung ======
    private static final DateTimeFormatter DATE_FORMAT = DateTimeFormatter.ofPattern("dd/MM/yyyy");

    // ====== C√°c TextField & DatePicker ======
    @FXML private TextField luongthuong_txmaluong;
    @FXML private TextField luongthuong_txmaNV;
    @FXML private DatePicker luongthuong_datethangnam;
    @FXML private TextField luongthuong_txluongcoban;
    @FXML private TextField luongthuong_txphucap;
    @FXML private TextField luongthuong_txthuong;
    @FXML private TextField luongthuong_txkhautru;
    @FXML private TextField luongthuong_txtongluong;
    @FXML private DatePicker luongthuong_datengaychitra;

    // ====== B·∫£ng d·ªØ li·ªáu v√† c√°c c·ªôt ======
    @FXML private TableView<LuongThuong> luongthuong_tbluongthuong;
    @FXML private TableColumn<LuongThuong, String> luongthuong_colmaluong;
    @FXML private TableColumn<LuongThuong, String> luongthuong_colmaNV;
    @FXML private TableColumn<LuongThuong, String> luongthuong_colthangnam;
    @FXML private TableColumn<LuongThuong, Double> luongthuong_colluongcoban;
    @FXML private TableColumn<LuongThuong, Double> luongthuong_colphucap;
    @FXML private TableColumn<LuongThuong, Double> luongthuong_colthuong;
    @FXML private TableColumn<LuongThuong, Double> luongthuong_colkhautru;
    @FXML private TableColumn<LuongThuong, Double> luongthuong_coltongluong;
    @FXML private TableColumn<LuongThuong, String> luongthuong_colngaychitra;

    // ====== D·ªØ li·ªáu hi·ªÉn th·ªã ======
    private final ObservableList<LuongThuong> dsLuong = FXCollections.observableArrayList();

    @FXML
    public void initialize() {
        DecimalFormat df = new DecimalFormat("#,###.##");
        // Li√™n k·∫øt d·ªØ li·ªáu v·ªõi c·ªôt
        luongthuong_colmaluong.setCellValueFactory(c -> new javafx.beans.property.SimpleStringProperty(c.getValue().getMaLuong()));
        luongthuong_colmaNV.setCellValueFactory(c -> new javafx.beans.property.SimpleStringProperty(c.getValue().getMaNhanVien()));
        luongthuong_colthangnam.setCellValueFactory(c -> new javafx.beans.property.SimpleStringProperty(c.getValue().getThangNam()));
        luongthuong_colngaychitra.setCellValueFactory(c -> new javafx.beans.property.SimpleStringProperty(c.getValue().getNgayChiTra()));
        // L∆∞∆°ng c∆° b·∫£n
        luongthuong_colluongcoban.setCellValueFactory(c -> new javafx.beans.property.SimpleObjectProperty<>(c.getValue().getLuongCoBan()));
        luongthuong_colluongcoban.setCellFactory(col -> new TableCell<LuongThuong, Double>() {
            @Override
            protected void updateItem(Double item, boolean empty) {
                super.updateItem(item, empty);
                setText(empty || item == null ? "" : df.format(item));
                setStyle("-fx-alignment: CENTER-RIGHT;");
            }
        });

        // Ph·ª• c·∫•p
        luongthuong_colphucap.setCellValueFactory(c -> new javafx.beans.property.SimpleObjectProperty<>(c.getValue().getPhuCap()));
        luongthuong_colphucap.setCellFactory(col -> new TableCell<LuongThuong, Double>() {
            @Override
            protected void updateItem(Double item, boolean empty) {
                super.updateItem(item, empty);
                setText(empty || item == null ? "" : df.format(item));
                setStyle("-fx-alignment: CENTER-RIGHT;");
            }
        });

        // Th∆∞·ªüng
        luongthuong_colthuong.setCellValueFactory(c -> new javafx.beans.property.SimpleObjectProperty<>(c.getValue().getThuong()));
        luongthuong_colthuong.setCellFactory(col -> new TableCell<LuongThuong, Double>() {
            @Override
            protected void updateItem(Double item, boolean empty) {
                super.updateItem(item, empty);
                setText(empty || item == null ? "" : df.format(item));
                setStyle("-fx-alignment: CENTER-RIGHT;");
            }
        });

        // Kh·∫•u tr·ª´
        luongthuong_colkhautru.setCellValueFactory(c -> new javafx.beans.property.SimpleObjectProperty<>(c.getValue().getKhauTru()));
        luongthuong_colkhautru.setCellFactory(col -> new TableCell<LuongThuong, Double>() {
            @Override
            protected void updateItem(Double item, boolean empty) {
                super.updateItem(item, empty);
                setText(empty || item == null ? "" : df.format(item));
                setStyle("-fx-alignment: CENTER-RIGHT;");
            }
        });

        // T·ªïng l∆∞∆°ng
        luongthuong_coltongluong.setCellValueFactory(c -> new javafx.beans.property.SimpleObjectProperty<>(c.getValue().getTongLuong()));
        luongthuong_coltongluong.setCellFactory(col -> new TableCell<LuongThuong, Double>() {
            @Override
            protected void updateItem(Double item, boolean empty) {
                super.updateItem(item, empty);
                setText(empty || item == null ? "" : df.format(item));
                setStyle("-fx-alignment: CENTER-RIGHT;");
            }
        });

        // Load d·ªØ li·ªáu ban ƒë·∫ßu t·ª´ DB
        DataService.getInstance().reloadAllData();
        dsLuong.setAll(DataService.getInstance().getDsLuongThuong());
        luongthuong_tbluongthuong.setItems(dsLuong);

        // üßÆ T·ª± ƒë·ªông t√≠nh t·ªïng l∆∞∆°ng khi ng∆∞·ªùi d√πng nh·∫≠p c√°c √¥ s·ªë
        luongthuong_tbluongthuong.getSelectionModel().selectedItemProperty().addListener((obs, oldVal, newVal) -> {
            if (newVal != null) {             
                luongthuong_txmaluong.setText(newVal.getMaLuong());
                luongthuong_txmaNV.setText(newVal.getMaNhanVien());
                luongthuong_txluongcoban.setText(df.format(newVal.getLuongCoBan()));
                luongthuong_txphucap.setText(df.format(newVal.getPhuCap()));
                luongthuong_txthuong.setText(df.format(newVal.getThuong()));
                luongthuong_txkhautru.setText(df.format(newVal.getKhauTru()));
                luongthuong_txtongluong.setText(df.format(newVal.getTongLuong())); // ‚úÖ Kh√¥ng c√≤n E7 n·ªØa

                try {
                    luongthuong_datethangnam.setValue(LocalDate.parse("01/" + newVal.getThangNam(), DateTimeFormatter.ofPattern("dd/MM/yyyy")));
                } catch (Exception e) {
                    luongthuong_datethangnam.setValue(null);
                }

                try {
                    String ngay = newVal.getNgayChiTra();
                    LocalDate d = ngay.contains("/") ?
                            LocalDate.parse(ngay, DateTimeFormatter.ofPattern("dd/MM/yyyy")) :
                            LocalDate.parse(ngay, DateTimeFormatter.ofPattern("yyyy-MM-dd"));
                    luongthuong_datengaychitra.setValue(d);
                } catch (Exception e) {
                    luongthuong_datengaychitra.setValue(null);
                }
            }
        });
    }

    // ============= C√ÅC N√öT CH·ª®C NƒÇNG =============

     /* N√∫t ‚ÄúTh√™m‚Äù */
    @FXML
    private void luongthuong_themAction() {
        try {
            // ====== L·∫•y d·ªØ li·ªáu ======
            String maLuong = luongthuong_txmaluong.getText().trim();
            String maNV = luongthuong_txmaNV.getText().trim();
            LocalDate thangNamDate = luongthuong_datethangnam.getValue();
            LocalDate ngayChiTraDate = luongthuong_datengaychitra.getValue();

            if (maLuong.isEmpty() || maNV.isEmpty() || thangNamDate == null || ngayChiTraDate == null) {
                canhbao.canhbao("Thi·∫øu th√¥ng tin", "Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin b·∫Øt bu·ªôc (*) !");
                return;
            }

            String thangNam = thangNamDate.format(DateTimeFormatter.ofPattern("MM/yyyy"));
            String ngayChiTra = ngayChiTraDate.format(DateTimeFormatter.ofPattern("yyyy-MM-dd"));

            double luongCoBan, phuCap, thuong, khauTru;
            try {
                luongCoBan = Double.parseDouble(luongthuong_txluongcoban.getText().trim());
                phuCap = Double.parseDouble(luongthuong_txphucap.getText().trim());
                thuong = Double.parseDouble(luongthuong_txthuong.getText().trim());
                khauTru = Double.parseDouble(luongthuong_txkhautru.getText().trim());
            } catch (NumberFormatException e) {
                canhbao.canhbao("L·ªói ƒë·ªãnh d·∫°ng",
                        "M·ªôt ho·∫∑c nhi·ªÅu tr∆∞·ªùng l∆∞∆°ng kh√¥ng h·ª£p l·ªá!\n" +
                        "‚Ä¢ L∆∞∆°ng c∆° b·∫£n, ph·ª• c·∫•p, th∆∞·ªüng, kh·∫•u tr·ª´ ph·∫£i l√† S·ªê.\n" +
                        "‚Ä¢ Kh√¥ng nh·∫≠p k√Ω t·ª± ch·ªØ ho·∫∑c d·∫•u c√°ch th·ª´a.");
                return;
            }

            if (luongCoBan < 0 || phuCap < 0 || thuong < 0 || khauTru < 0) {
                canhbao.canhbao("Gi√° tr·ªã kh√¥ng h·ª£p l·ªá",
                        "Vui l√≤ng ki·ªÉm tra l·∫°i:\n" +
                        "‚Ä¢ L∆∞∆°ng, ph·ª• c·∫•p, th∆∞·ªüng, kh·∫•u tr·ª´ kh√¥ng ƒë∆∞·ª£c √¢m.");
                return;
            }

            if (khauTru > (luongCoBan + phuCap + thuong)) {
                canhbao.canhbao("Kh·∫•u tr·ª´ qu√° cao", "Kho·∫£n kh·∫•u tr·ª´ kh√¥ng th·ªÉ v∆∞·ª£t qu√° t·ªïng thu nh·∫≠p!");
                return;
            }

            // ====== Ki·ªÉm tra trong h·ªá th·ªëng ======
            boolean trungMa = DataService.getInstance().getDsLuongThuong()
                    .stream().anyMatch(lt -> lt.getMaLuong().equalsIgnoreCase(maLuong));
            
        
            if (trungMa) {
                canhbao.canhbao("Tr√πng m√£ l∆∞∆°ng", "M√£ l∆∞∆°ng '" + maLuong + "' ƒë√£ t·ªìn t·∫°i trong h·ªá th·ªëng!");
                return;
            }

            boolean tonTaiNV = DataService.getInstance().getDsNhanSu()
                    .stream().anyMatch(ns -> ns.getMaNV().equalsIgnoreCase(maNV));
            if (!tonTaiNV) {
                canhbao.canhbao("Sai m√£ nh√¢n vi√™n",
                        "Kh√¥ng t√¨m th·∫•y m√£ nh√¢n vi√™n '" + maNV + "' trong h·ªá th·ªëng.\n" +
                        "‚Ä¢ H√£y ki·ªÉm tra l·∫°i danh s√°ch nh√¢n vi√™n.\n" +
                        "‚Ä¢ N·∫øu nh√¢n vi√™n m·ªõi, c·∫ßn th√™m v√†o m·ª•c 'Nh√¢n s·ª±'.\n" +
                         "tr∆∞·ªõc khi t·∫°o l∆∞∆°ng.");
                return;
            }

            // ====== Ghi d·ªØ li·ªáu xu·ªëng DB ======
            LuongThuong lt = new LuongThuong(maLuong, maNV, thangNam, luongCoBan, phuCap, thuong, khauTru, ngayChiTra);
            boolean success;
            try {
                success = DataService.getInstance().addLuongThuong(lt);
            } catch (Exception dbEx) {
                dbEx.printStackTrace();
                canhbao.canhbao("L·ªói c∆° s·ªü d·ªØ li·ªáu",
                        "Kh√¥ng th·ªÉ ghi d·ªØ li·ªáu xu·ªëng b·∫£ng luongthuong.\n" +
                        "Nguy√™n nh√¢n c√≥ th·ªÉ:\n" +
                        "‚Ä¢ K·∫øt n·ªëi MySQL b·ªã ng·∫Øt.\n" +
                        "‚Ä¢ C·∫•u tr√∫c b·∫£ng kh√¥ng ƒë√∫ng.\n" +
                        "‚Ä¢ D·ªØ li·ªáu ƒë·∫ßu v√†o v∆∞·ª£t gi·ªõi h·∫°n c·ªôt.");
                return;
            }

            if (success) {
                refreshTable();
                canhbao.thongbao("Th√†nh c√¥ng üéâ", "ƒê√£ th√™m l∆∞∆°ng th∆∞·ªüng cho nh√¢n vi√™n " + maNV + " (" + thangNam + ")!");
                clearInputFields();
            } else {
                canhbao.canhbao("Th·∫•t b·∫°i",
                        "Kh√¥ng th·ªÉ th√™m b·∫£n ghi l∆∞∆°ng th∆∞·ªüng.\n" +
                        "‚Ä¢ C√≥ th·ªÉ do l·ªói ghi DB ho·∫∑c k·∫øt n·ªëi b·ªã ng·∫Øt.\n" +
                        "‚Ä¢ Vui l√≤ng th·ª≠ l·∫°i ho·∫∑c ki·ªÉm tra nh·∫≠t k√Ω MySQL.");
            }

        } catch (Exception e) {
            e.printStackTrace();
            canhbao.canhbao("L·ªói h·ªá th·ªëng",
                    "ƒê√£ x·∫£y ra l·ªói ngo√†i √Ω mu·ªën trong qu√° tr√¨nh th√™m m·ªõi:\n" +
                    e.getClass().getSimpleName() + ": " + e.getMessage());
        }
    }
    /** üî¥ N√∫t ‚ÄúX√≥a‚Äù */
    @FXML
    private void luongthuong_xoaAction() {
        LuongThuong selected = luongthuong_tbluongthuong.getSelectionModel().getSelectedItem();
        if (selected == null) {
            canhbao.canhbao("Thi·∫øu l·ª±a ch·ªçn", "Vui l√≤ng ch·ªçn d√≤ng c·∫ßn x√≥a!");
            return;
        }

        boolean xacNhan = canhbao.xacNhan("X√°c nh·∫≠n x√≥a", "X√≥a b·∫£n ghi n√†y?", 
                                          "B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a m√£ l∆∞∆°ng: " + selected.getMaLuong() + " ?");
        if (!xacNhan) return;

        DataService.getInstance().deleteLuongThuong(selected);
        refreshTable();
        canhbao.thongbao("ƒê√£ x√≥a", "B·∫£n ghi l∆∞∆°ng th∆∞·ªüng ƒë√£ ƒë∆∞·ª£c x√≥a!");
    }
    /** üîÑ N√∫t ‚ÄúS·ª≠a‚Äù */
    @FXML
    private void luongthuong_suaAction() {
        LuongThuong selected = luongthuong_tbluongthuong.getSelectionModel().getSelectedItem();
        if (selected == null) {
            canhbao.canhbao("Thi·∫øu l·ª±a ch·ªçn", "Vui l√≤ng ch·ªçn m·ªôt d√≤ng ƒë·ªÉ s·ª≠a!");
            return;
        }

        // V√≠ d·ª•: cho ph√©p s·ª≠a tr·ª±c ti·∫øp tr√™n form
        luongthuong_txmaluong.setText(selected.getMaLuong());
        luongthuong_txmaNV.setText(selected.getMaNhanVien());
        // b·∫°n c√≥ th·ªÉ th√™m logic m·ªü c·ª≠a s·ªï con s·ª≠a ·ªü ƒë√¢y
        canhbao.thongbao("Th√¥ng tin", "Ch·ª©c nƒÉng s·ª≠a ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn!");
    }
    /** üîç N√∫t ‚ÄúT√¨m ki·∫øm‚Äù */
    @FXML
    private void luongthuong_timkiemAction() throws IOException {
        FXMLLoader loader = new FXMLLoader(getClass().getResource("timkiemluongthuong.fxml"));
        Parent root = loader.load();
        Stage stage = new Stage();
        stage.setTitle("T√¨m ki·∫øm l∆∞∆°ng th∆∞·ªüng");
        stage.setScene(new Scene(root));
        stage.show();
    }

    /** üì§ N√∫t ‚ÄúXu·∫•t th√¥ng tin‚Äù */
    @FXML
    private void luongthuong_xuatAction() {
        canhbao.thongbao("ƒêang ph√°t tri·ªÉn", "Ch·ª©c nƒÉng xu·∫•t file Excel s·∫Ω ƒë∆∞·ª£c c·∫≠p nh·∫≠t sau!");
    }

    /** ‚Ü©Ô∏è N√∫t ‚ÄúQuay l·∫°i‚Äù */
    @FXML
    private void luongthuong_quaylaiAction() {
        App.setRoot("main");
    }

    // ============= H√ÄM H·ªñ TR·ª¢ =============

    /** üßπ D·ªçn form sau khi th√™m ho·∫∑c s·ª≠a */
    private void clearInputFields() {
        luongthuong_txmaluong.clear();
        luongthuong_txmaNV.clear();
        luongthuong_datethangnam.setValue(null);
        luongthuong_txluongcoban.clear();
        luongthuong_txphucap.clear();
        luongthuong_txthuong.clear();
        luongthuong_txkhautru.clear();
        luongthuong_txtongluong.clear();
        luongthuong_datengaychitra.setValue(null);
        luongthuong_tbluongthuong.getSelectionModel().clearSelection();
    }

    /** üßÆ T·ª± ƒë·ªông t√≠nh t·ªïng l∆∞∆°ng ƒë·ªông */
    private void capNhatTongLuong() {
        try {
            double luongCoBan = Double.parseDouble(luongthuong_txluongcoban.getText().trim());
            double phuCap = Double.parseDouble(luongthuong_txphucap.getText().trim());
            double thuong = Double.parseDouble(luongthuong_txthuong.getText().trim());
            double khauTru = Double.parseDouble(luongthuong_txkhautru.getText().trim());
            double tongLuong = luongCoBan + phuCap + thuong - khauTru;
            luongthuong_txtongluong.setText(String.format("%,.0f", tongLuong)); // c√≥ d·∫•u ph·∫©y ngƒÉn c√°ch
        } catch (NumberFormatException e) {
            luongthuong_txtongluong.clear();
        }
    }

    /** üîÑ L√†m m·ªõi l·∫°i b·∫£ng sau khi th√™m/s·ª≠a/x√≥a */
    private void refreshTable() {
        dsLuong.setAll(DataService.getInstance().getDsLuongThuong());
    }
}
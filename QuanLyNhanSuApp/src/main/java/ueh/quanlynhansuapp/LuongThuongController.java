package ueh.quanlynhansuapp;

import java.io.IOException;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;

import javafx.beans.property.SimpleObjectProperty;
import javafx.beans.property.SimpleStringProperty;
import javafx.beans.value.ChangeListener;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.stage.Stage;

/**
 * Controller qu·∫£n l√Ω ch·ª©c nƒÉng l∆∞∆°ng th∆∞·ªüng.
 * Phi√™n b·∫£n ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t ƒë·ªÉ bao ph·ªß h·∫ßu h·∫øt ngo·∫°i l·ªá c√≥ th·ªÉ x·∫£y ra khi sinh vi√™n thao t√°c nh·∫≠p li·ªáu v√† x·ª≠ l√Ω DB.
 */
public class LuongThuongController {

    private static final DateTimeFormatter MONTH_YEAR = DateTimeFormatter.ofPattern("MM/yyyy");
    private static final DateTimeFormatter YMD = DateTimeFormatter.ofPattern("yyyy-MM-dd");
    private static final DateTimeFormatter DMY = DateTimeFormatter.ofPattern("dd/MM/yyyy");

    @FXML private TextField luongthuong_txmaluong;
    @FXML private TextField luongthuong_txmaNV;
    @FXML private DatePicker luongthuong_datethangnam;
    @FXML private TextField luongthuong_txluongcoban;
    @FXML private TextField luongthuong_txphucap;
    @FXML private TextField luongthuong_txthuong;
    @FXML private TextField luongthuong_txkhautru;
    @FXML private TextField luongthuong_txtongluong;
    @FXML private DatePicker luongthuong_datengaychitra;
    @FXML private Button luongthuong_btthem;
    @FXML private Button luongthuong_btxoa;
    @FXML private Button luongthuong_btsua;
    @FXML private Button luongthuong_bttimkiem;
    @FXML private Button luongthuong_btxuat;
    @FXML private Button luongthuong_btquaylai;

    @FXML private TableView<LuongThuong> luongthuong_tbluongthuong;
    @FXML private TableColumn<LuongThuong, String> luongthuong_colmaluong;
    @FXML private TableColumn<LuongThuong, String> luongthuong_colmaNV;
    @FXML private TableColumn<LuongThuong, String> luongthuong_colthangnam;
    @FXML private TableColumn<LuongThuong, Double> luongthuong_colluongcoban;
    @FXML private TableColumn<LuongThuong, Double> luongthuong_colphucap;
    @FXML private TableColumn<LuongThuong, Double> luongthuong_colthuong;
    @FXML private TableColumn<LuongThuong, Double> luongthuong_colkhautru;
    @FXML private TableColumn<LuongThuong, Double> luongthuong_coltongluong;
    @FXML private TableColumn<LuongThuong, String> luongthuong_colngaychitra;
    
    

    private final ObservableList<LuongThuong> dsLuong = FXCollections.observableArrayList();

    @FXML
    public void initialize() {
        try {
            // ==== BINDING C·ªòT ====
            luongthuong_colmaluong.setCellValueFactory(c -> new SimpleStringProperty(c.getValue().getMaLuong()));
            luongthuong_colmaNV.setCellValueFactory(c -> new SimpleStringProperty(c.getValue().getMaNhanVien()));
            luongthuong_colthangnam.setCellValueFactory(c -> new SimpleStringProperty(c.getValue().getThangNam()));
            luongthuong_colngaychitra.setCellValueFactory(c -> new SimpleStringProperty(c.getValue().getNgayChiTra()));

            luongthuong_colluongcoban.setCellValueFactory(c -> new SimpleObjectProperty<>(c.getValue().getLuongCoBan()));
            luongthuong_colphucap.setCellValueFactory(c -> new SimpleObjectProperty<>(c.getValue().getPhuCap()));
            luongthuong_colthuong.setCellValueFactory(c -> new SimpleObjectProperty<>(c.getValue().getThuong()));
            luongthuong_colkhautru.setCellValueFactory(c -> new SimpleObjectProperty<>(c.getValue().getKhauTru()));
            luongthuong_coltongluong.setCellValueFactory(c -> new SimpleObjectProperty<>(c.getValue().getTongLuong()));

            alignRight(luongthuong_colluongcoban);
            alignRight(luongthuong_colphucap);
            alignRight(luongthuong_colthuong);
            alignRight(luongthuong_colkhautru);
            alignRight(luongthuong_coltongluong);

            // ==== LOAD D·ªÆ LI·ªÜU ====
            DataService.getInstance().reloadAllData();
            dsLuong.setAll(DataService.getInstance().getDsLuongThuong());
            luongthuong_tbluongthuong.setItems(dsLuong);

            // ==== AUTO FILL KHI CH·ªåN D√íNG ====
            luongthuong_tbluongthuong.getSelectionModel().selectedItemProperty().addListener((obs, oldVal, lt) -> {
                if (lt == null) return;
                try {
                    fillForm(lt);
                } catch (Exception ex) {
                    canhbao.canhbao("L·ªói hi·ªÉn th·ªã", "Kh√¥ng th·ªÉ hi·ªÉn th·ªã chi ti·∫øt d√≤ng: " + ex.getMessage());
                }
            });

            // ==== AUTO T√çNH T·ªîNG L∆Ø∆†NG ====
            ChangeListener<String> recalc = (o, a, b) -> capNhatTongLuong();
            luongthuong_txluongcoban.textProperty().addListener(recalc);
            luongthuong_txphucap.textProperty().addListener(recalc);
            luongthuong_txthuong.textProperty().addListener(recalc);
            luongthuong_txkhautru.textProperty().addListener(recalc);

            luongthuong_txtongluong.setEditable(false);
            luongthuong_txtongluong.setStyle("-fx-alignment: CENTER-LEFT");

            // ==== CH·ªà CHO PH√âP NH·∫¨P S·ªê NGUY√äN D∆Ø∆†NG ====
            addIntegerOnlyValidation(luongthuong_txluongcoban, "L∆∞∆°ng c∆° b·∫£n");
            addIntegerOnlyValidation(luongthuong_txphucap, "Ph·ª• c·∫•p");
            addIntegerOnlyValidation(luongthuong_txthuong, "Th∆∞·ªüng");
            addIntegerOnlyValidation(luongthuong_txkhautru, "Kh·∫•u tr·ª´");

        } catch (Exception e) {
            canhbao.canhbao("L·ªói kh·ªüi t·∫°o", "Kh√¥ng th·ªÉ kh·ªüi t·∫°o b·∫£ng d·ªØ li·ªáu:\n" + e.getMessage());
        }
        
        // ==== T√πy ch·ªânh DatePicker "Th√°ng/NƒÉm" ====
        luongthuong_datethangnam.setPromptText("MM/yyyy");

        // Chuy·ªÉn ƒë·ªïi hi·ªÉn th·ªã v√† parse
        luongthuong_datethangnam.setConverter(new javafx.util.StringConverter<LocalDate>() {
            private final DateTimeFormatter formatter = DateTimeFormatter.ofPattern("MM/yyyy");

            @Override
            public String toString(LocalDate date) {
                if (date != null) {
                    return formatter.format(date);
                } else {
                    return "";
                }
            }

            @Override
            public LocalDate fromString(String string) {
                if (string != null && !string.isEmpty()) {
                    try {
                        // D√πng ng√†y 1 c·ªë ƒë·ªãnh ƒë·ªÉ parse
                        return LocalDate.parse("01/" + string, DateTimeFormatter.ofPattern("dd/MM/yyyy"));
                    } catch (Exception e) {
                        return null;
                    }
                } else {
                    return null;
                }
            }
        });
    }

    // =========================== H·ªñ TR·ª¢ =============================

    private void alignRight(TableColumn<LuongThuong, Double> col) {
        col.setCellFactory(tc -> new TableCell<>() {
            @Override protected void updateItem(Double item, boolean empty) {
                super.updateItem(item, empty);
                setText(empty || item == null ? "" : doubleToPlain(item));
                setStyle("-fx-alignment: CENTER-LEFT;");
            }
        });
    }

    private String doubleToPlain(double v) {
        if (Math.abs(v - Math.rint(v)) < 1e-9) return String.valueOf((long)Math.rint(v));
        return String.format("%.2f", v);
    }

    private double parseMoney(String s) throws NumberFormatException {
        if (s == null || s.isBlank()) return 0;
        return Double.parseDouble(s.trim());
    }

    private void capNhatTongLuong() {
        try {
            double luongCoBan = parseMoney(luongthuong_txluongcoban.getText());
            double phuCap = parseMoney(luongthuong_txphucap.getText());
            double thuong = parseMoney(luongthuong_txthuong.getText());
            double khauTru = parseMoney(luongthuong_txkhautru.getText());
            double tong = luongCoBan + phuCap + thuong - khauTru;
            if (tong < 0) tong = 0;
            luongthuong_txtongluong.setText(doubleToPlain(tong));
        } catch (Exception ignored) {
            luongthuong_txtongluong.clear();
        }
    }

    private void fillForm(LuongThuong lt) {
        luongthuong_txmaluong.setText(lt.getMaLuong());
        luongthuong_txmaNV.setText(lt.getMaNhanVien());
        luongthuong_txluongcoban.setText(doubleToPlain(lt.getLuongCoBan()));
        luongthuong_txphucap.setText(doubleToPlain(lt.getPhuCap()));
        luongthuong_txthuong.setText(doubleToPlain(lt.getThuong()));
        luongthuong_txkhautru.setText(doubleToPlain(lt.getKhauTru()));
        luongthuong_txtongluong.setText(doubleToPlain(lt.getTongLuong()));

        try {
            luongthuong_datethangnam.setValue(LocalDate.parse("01/" + lt.getThangNam(), DMY));
        } catch (DateTimeParseException e) {
            luongthuong_datethangnam.setValue(null);
        }

        try {
            String ngay = lt.getNgayChiTra();
            LocalDate d = ngay.contains("/") ? LocalDate.parse(ngay, DMY) : LocalDate.parse(ngay, YMD);
            luongthuong_datengaychitra.setValue(d);
        } catch (DateTimeParseException e) {
            luongthuong_datengaychitra.setValue(null);
        }
    }


    // ============= H√ÄM H·ªñ TR·ª¢ =============

    /** üßπ D·ªçn form sau khi th√™m ho·∫∑c s·ª≠a */
    private void clearInputFields() {
        luongthuong_txmaluong.clear();
        luongthuong_txmaNV.clear();
        luongthuong_txluongcoban.clear();
        luongthuong_txphucap.clear();
        luongthuong_txthuong.clear();
        luongthuong_txkhautru.clear();
        luongthuong_txtongluong.clear();
        luongthuong_datethangnam.setValue(null);
        luongthuong_datengaychitra.setValue(null);
        luongthuong_tbluongthuong.getSelectionModel().clearSelection();
    }

    private void refreshTable() {
        dsLuong.setAll(DataService.getInstance().getDsLuongThuong());
    }

    // =========================== C√ÅC N√öT CH·ª®C NƒÇNG =============================

    @FXML
    private void luongthuong_themAction() {
        try {
            String maLuong = safeTrim(luongthuong_txmaluong.getText());
            String maNV = safeTrim(luongthuong_txmaNV.getText());
            LocalDate thangNamDate = luongthuong_datethangnam.getValue();
            LocalDate ngayChiTraDate = luongthuong_datengaychitra.getValue();

            // === Ki·ªÉm tra thi·∫øu d·ªØ li·ªáu ===
            if (maLuong.isEmpty() || maNV.isEmpty() || thangNamDate == null || ngayChiTraDate == null) {
                canhbao.canhbao("Thi·∫øu th√¥ng tin", "Vui l√≤ng nh·∫≠p ƒë·ªß m√£ l∆∞∆°ng, m√£ nh√¢n vi√™n, th√°ng nƒÉm v√† ng√†y chi tr·∫£!");
                return;
            }

            // === Parse v√† validate ti·ªÅn t·ªá ===
            double luongCoBan = parseMoneySafe(luongthuong_txluongcoban.getText(), "L∆∞∆°ng c∆° b·∫£n");
            double phuCap = parseMoneySafe(luongthuong_txphucap.getText(), "Ph·ª• c·∫•p");
            double thuong = parseMoneySafe(luongthuong_txthuong.getText(), "Th∆∞·ªüng");
            double khauTru = parseMoneySafe(luongthuong_txkhautru.getText(), "Kh·∫•u tr·ª´");

            if (luongCoBan < 0 || phuCap < 0 || thuong < 0 || khauTru < 0) {
                canhbao.canhbao("Gi√° tr·ªã kh√¥ng h·ª£p l·ªá", "Kh√¥ng ƒë∆∞·ª£c nh·∫≠p s·ªë √¢m cho l∆∞∆°ng ho·∫∑c th∆∞·ªüng!");
                return;
            }
            if (khauTru > (luongCoBan + phuCap + thuong)) {
                canhbao.canhbao("Kh·∫•u tr·ª´ qu√° cao", "Kh·∫•u tr·ª´ kh√¥ng th·ªÉ v∆∞·ª£t t·ªïng thu nh·∫≠p!");
                return;
            }

            // === Ki·ªÉm tra logic ng√†y ===
            if (ngayChiTraDate.isBefore(thangNamDate.withDayOfMonth(1))) {
                canhbao.canhbao("L·ªói th·ªùi gian", "Ng√†y chi tr·∫£ kh√¥ng th·ªÉ tr∆∞·ªõc th√°ng l∆∞∆°ng!");
                return;
            }

            // === Ki·ªÉm tra nh√¢n vi√™n t·ªìn t·∫°i ===
            boolean tonTaiNV = DataService.getInstance().getDsNhanSu()
                    .stream().anyMatch(ns -> ns.getMaNV().equalsIgnoreCase(maNV));
            if (!tonTaiNV) {
                canhbao.canhbao("Sai m√£ nh√¢n vi√™n", "Kh√¥ng t√¨m th·∫•y m√£ nh√¢n vi√™n '" + maNV + "'.");
                return;
            }

            // === Ki·ªÉm tra tr√πng m√£ l∆∞∆°ng ===
            boolean tonTaiLuong = DataService.getInstance().getDsLuongThuong()
                    .stream().anyMatch(l -> l.getMaLuong().equalsIgnoreCase(maLuong));
            if (tonTaiLuong) {
                canhbao.canhbao("Tr√πng m√£ l∆∞∆°ng", "M√£ l∆∞∆°ng '" + maLuong + "' ƒë√£ t·ªìn t·∫°i.");
                return;
            }

            // === T·∫°o ƒë·ªëi t∆∞·ª£ng ===
            String thangNam = thangNamDate.format(MONTH_YEAR);
            String ngayChiTra = ngayChiTraDate.format(YMD);
            LuongThuong lt = new LuongThuong(maLuong, maNV, thangNam, luongCoBan, phuCap, thuong, khauTru, ngayChiTra);

            // === Ghi xu·ªëng DB ===
            boolean success = false;
            try {
                success = DataService.getInstance().addLuongThuong(lt);
            } catch (Exception e) {
                canhbao.canhbao("L·ªói khi th√™m d·ªØ li·ªáu", "Kh√¥ng th·ªÉ th√™m l∆∞∆°ng th∆∞·ªüng: " + e.getMessage());
                e.printStackTrace();
                return;
            }

            if (success) {
                refreshTable();
                canhbao.thongbao("Th√†nh c√¥ng üéâ", "ƒê√£ th√™m l∆∞∆°ng th∆∞·ªüng cho nh√¢n vi√™n " + maNV);
                clearInputFields();
            } else {
                canhbao.canhbao("Kh√¥ng th√†nh c√¥ng", "Th√™m th·∫•t b·∫°i. Ki·ªÉm tra d·ªØ li·ªáu v√† th·ª≠ l·∫°i.");
            }

        } catch (Exception e) {
            canhbao.canhbao("L·ªói h·ªá th·ªëng", "ƒê√£ x·∫£y ra l·ªói: " + e.getMessage());
            e.printStackTrace();
        }
    }

    @FXML
    private void luongthuong_xoaAction() {
        try {
            LuongThuong sel = luongthuong_tbluongthuong.getSelectionModel().getSelectedItem();
            if (sel == null) {
                canhbao.canhbao("Thi·∫øu l·ª±a ch·ªçn", "Vui l√≤ng ch·ªçn d√≤ng c·∫ßn x√≥a!");
                return;
            }
            if (!canhbao.xacNhan("X√≥a", "X√°c nh·∫≠n x√≥a", "X√≥a m√£ l∆∞∆°ng: " + sel.getMaLuong() + "?")) return;
            DataService.getInstance().deleteLuongThuong(sel);
            refreshTable();
            clearInputFields();
            canhbao.thongbao("ƒê√£ x√≥a", "B·∫£n ghi l∆∞∆°ng th∆∞·ªüng ƒë√£ ƒë∆∞·ª£c x√≥a!");
        } catch (Exception e) {
            canhbao.canhbao("L·ªói x√≥a", "Kh√¥ng th·ªÉ x√≥a b·∫£n ghi: " + e.getMessage());
        }
    }

    @FXML
    private void luongthuong_suaAction() {
        try {
            LuongThuong sel = luongthuong_tbluongthuong.getSelectionModel().getSelectedItem();
            if (sel == null) {
                canhbao.canhbao("Thi·∫øu l·ª±a ch·ªçn", "Vui l√≤ng ch·ªçn d√≤ng c·∫ßn s·ª≠a!");
                return;
            }

            FXMLLoader loader = new FXMLLoader(getClass().getResource("sualuongthuong.fxml"));
            Parent root = loader.load();
            SuaLuongThuong controller = loader.getController();
            controller.setLuongThuong(sel);

            Stage stage = new Stage();
            stage.setTitle("S·ª≠a l∆∞∆°ng th∆∞·ªüng");
            stage.setScene(new Scene(root));
            stage.show();
            stage.setOnHidden(e -> refreshTable());
        } catch (IOException e) {
            canhbao.canhbao("L·ªói giao di·ªán", "Kh√¥ng th·ªÉ m·ªü form s·ª≠a: " + e.getMessage());
        } catch (Exception e) {
            canhbao.canhbao("L·ªói h·ªá th·ªëng", "Kh√¥ng th·ªÉ m·ªü c·ª≠a s·ªï s·ª≠a: " + e.getMessage());
        }
    }

    @FXML
    private void luongthuong_timkiemAction() {
        try {
            FXMLLoader loader = new FXMLLoader(getClass().getResource("TimKiemLuongThuong.fxml"));
            Parent root = loader.load();

            Stage stage = new Stage();
            stage.setTitle("T√¨m ki·∫øm l∆∞∆°ng th∆∞·ªüng");
            stage.setScene(new Scene(root));
            stage.show();

        } catch (IOException e) {
            canhbao.canhbao("L·ªói FXML", "Kh√¥ng th·ªÉ m·ªü c·ª≠a s·ªï t√¨m ki·∫øm: " + e.getMessage());
            e.printStackTrace();
        } catch (Exception e) {
            canhbao.canhbao("L·ªói h·ªá th·ªëng", "ƒê√£ x·∫£y ra l·ªói khi m·ªü ch·ª©c nƒÉng t√¨m ki·∫øm!");
            e.printStackTrace();
        }
    }

    @FXML
    private void luongthuong_xuatAction() {
        try {
            // 1Ô∏è‚É£ X√°c nh·∫≠n tr∆∞·ªõc khi xu·∫•t
            boolean xacNhan = canhbao.xacNhan(
                "X√°c nh·∫≠n xu·∫•t d·ªØ li·ªáu",
                "Xu·∫•t to√†n b·ªô th√¥ng tin l∆∞∆°ng th∆∞·ªüng",
                "B·∫°n c√≥ mu·ªën xu·∫•t to√†n b·ªô th√¥ng tin l∆∞∆°ng th∆∞·ªüng ra file Excel kh√¥ng?"
            );

            if (!xacNhan) {
                return; // Ng∆∞·ªùi d√πng ch·ªçn Cancel
            }

            // 2Ô∏è‚É£ Ki·ªÉm tra d·ªØ li·ªáu
            if (dsLuong == null || dsLuong.isEmpty()) {
                canhbao.canhbao("Kh√¥ng c√≥ d·ªØ li·ªáu", "Kh√¥ng c√≥ b·∫£n ghi n√†o ƒë·ªÉ xu·∫•t!");
                return;
            }

            // 3Ô∏è‚É£ H·ªôp tho·∫°i ch·ªçn n∆°i l∆∞u file
            javafx.stage.FileChooser fileChooser = new javafx.stage.FileChooser();
            fileChooser.setTitle("Ch·ªçn n∆°i l∆∞u file Excel");
            fileChooser.getExtensionFilters().add(
                new javafx.stage.FileChooser.ExtensionFilter("Excel Files (*.xlsx)", "*.xlsx")
            );

            java.io.File file = fileChooser.showSaveDialog(luongthuong_tbluongthuong.getScene().getWindow());
            if (file == null) {
                return; // ng∆∞·ªùi d√πng ƒë√≥ng h·ªôp tho·∫°i
            }

            // 4Ô∏è‚É£ T·∫°o workbook v√† sheet
            org.apache.poi.ss.usermodel.Workbook workbook = new org.apache.poi.xssf.usermodel.XSSFWorkbook();
            org.apache.poi.ss.usermodel.Sheet sheet = workbook.createSheet("LuongThuong");

            // 5Ô∏è‚É£ Style header
            org.apache.poi.ss.usermodel.Font headerFont = workbook.createFont();
            headerFont.setBold(true);
            headerFont.setFontHeightInPoints((short) 12);

            org.apache.poi.ss.usermodel.CellStyle headerStyle = workbook.createCellStyle();
            headerStyle.setFont(headerFont);
            headerStyle.setAlignment(org.apache.poi.ss.usermodel.HorizontalAlignment.CENTER);

            // Style cho s·ªë
            org.apache.poi.ss.usermodel.CellStyle numStyle = workbook.createCellStyle();
            org.apache.poi.ss.usermodel.DataFormat format = workbook.createDataFormat();
            numStyle.setDataFormat(format.getFormat("#,##0"));
            numStyle.setAlignment(org.apache.poi.ss.usermodel.HorizontalAlignment.RIGHT);

            // 6Ô∏è‚É£ Ghi h√†ng ti√™u ƒë·ªÅ
            String[] headers = {
                "M√£ l∆∞∆°ng", "M√£ nh√¢n vi√™n", "Th√°ng nƒÉm", "L∆∞∆°ng c∆° b·∫£n",
                "Ph·ª• c·∫•p", "Th∆∞·ªüng", "Kh·∫•u tr·ª´", "T·ªïng l∆∞∆°ng", "Ng√†y chi tr·∫£"
            };

            org.apache.poi.ss.usermodel.Row headerRow = sheet.createRow(0);
            for (int i = 0; i < headers.length; i++) {
                org.apache.poi.ss.usermodel.Cell cell = headerRow.createCell(i);
                cell.setCellValue(headers[i]);
                cell.setCellStyle(headerStyle);
            }

            // 7Ô∏è‚É£ Ghi d·ªØ li·ªáu t·ª´ng d√≤ng
            int rowNum = 1;
            for (LuongThuong lt : dsLuong) {
                org.apache.poi.ss.usermodel.Row row = sheet.createRow(rowNum++);
                row.createCell(0).setCellValue(lt.getMaLuong());
                row.createCell(1).setCellValue(lt.getMaNhanVien());
                row.createCell(2).setCellValue(lt.getThangNam());

                org.apache.poi.ss.usermodel.Cell c3 = row.createCell(3);
                c3.setCellValue(lt.getLuongCoBan());
                c3.setCellStyle(numStyle);

                org.apache.poi.ss.usermodel.Cell c4 = row.createCell(4);
                c4.setCellValue(lt.getPhuCap());
                c4.setCellStyle(numStyle);

                org.apache.poi.ss.usermodel.Cell c5 = row.createCell(5);
                c5.setCellValue(lt.getThuong());
                c5.setCellStyle(numStyle);

                org.apache.poi.ss.usermodel.Cell c6 = row.createCell(6);
                c6.setCellValue(lt.getKhauTru());
                c6.setCellStyle(numStyle);

                org.apache.poi.ss.usermodel.Cell c7 = row.createCell(7);
                c7.setCellValue(lt.getTongLuong());
                c7.setCellStyle(numStyle);

                row.createCell(8).setCellValue(lt.getNgayChiTra());
            }

            // 8Ô∏è‚É£ Auto resize c·ªôt
            for (int i = 0; i < headers.length; i++) {
                sheet.autoSizeColumn(i);
            }

            // 9Ô∏è‚É£ Ghi file ra ƒëƒ©a
            try (java.io.FileOutputStream out = new java.io.FileOutputStream(file)) {
                workbook.write(out);
            }

            workbook.close();

            // üîü Th√¥ng b√°o th√†nh c√¥ng
            canhbao.thongbao("Xu·∫•t th√†nh c√¥ng üéâ", "ƒê√£ xu·∫•t d·ªØ li·ªáu ra file Excel:\n" + file.getAbsolutePath());

        } catch (java.io.FileNotFoundException e) {
            canhbao.canhbao("L·ªói ghi file", "Kh√¥ng th·ªÉ ghi file (file ƒëang ƒë∆∞·ª£c m·ªü ho·∫∑c b·ªã kh√≥a)!");
        } catch (Exception e) {
            e.printStackTrace();
            canhbao.canhbao("L·ªói h·ªá th·ªëng", "ƒê√£ x·∫£y ra l·ªói khi xu·∫•t d·ªØ li·ªáu:\n" + e.getMessage());
        }
    }

    @FXML
    private void luongthuong_quaylaiAction() throws IOException {
        FXMLLoader loader = new FXMLLoader(App.class.getResource("main.fxml"));
        Scene scene = new Scene(loader.load());
        Stage stage = (Stage) luongthuong_btquaylai.getScene().getWindow();
        stage.setScene(scene);
        stage.centerOnScreen();
    }


    private String safeTrim(String text) {
        return text == null ? "" : text.trim();
    }

    private double parseMoneySafe(String s, String fieldName) {
        try {
            return parseMoney(s);
        } catch (NumberFormatException e) {
            canhbao.canhbao("Gi√° tr·ªã kh√¥ng h·ª£p l·ªá", "√î \"" + fieldName + "\" ph·∫£i l√† s·ªë nguy√™n h·ª£p l·ªá!");
            return -1;
        }
    }

    private void addIntegerOnlyValidation(TextField field, String fieldName) {
        field.textProperty().addListener((obs, oldValue, newValue) -> {
            if (newValue == null || newValue.isEmpty()) return;
            if (!newValue.matches("\\d+")) {
                canhbao.canhbao("Gi√° tr·ªã kh√¥ng h·ª£p l·ªá",
                        "√î \"" + fieldName + "\" ch·ªâ ƒë∆∞·ª£c ph√©p nh·∫≠p s·ªë nguy√™n d∆∞∆°ng!\nKh√¥ng d√πng d·∫•u ph·∫©y, ch·∫•m hay k√Ω t·ª± kh√°c.");
                field.setText(oldValue);
            }
        });
    }
}
